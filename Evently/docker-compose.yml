services:
  api.evently:
    image: ${DOCKER_REGISTRY-}apievently
    build:
      context: .
      dockerfile: Src/API/API.Evently/Dockerfile
    ports:
      - 5000:8080
      - 5001:8081
    # 1. New dependency condition
    depends_on:
      evently.database:
        condition: service_healthy # Wait until the DB health check passes
    environment:
      # Use the Docker Service Name and Internal Port (5432) for container-to-container connections
      - Database__Host=evently.database
      - Database__Port=5432

  evently.database:
    image: postgres:latest
    environment:
      - POSTGRES_DB=eventsetupDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./containers/db/init:/docker-entrypoint-initdb.d
    ports:
      - 5434:5432
    
    # 2. Add health check to verify database readiness
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d eventsetupDb"]
      interval: 5s
      timeout: 5s
      retries: 5

  evently.redis:
    image: redis:latest
    container_name: Evently.Redis
    restart: always
    ports:
      - 6379:6379
  evently.queue:
    image: rabbitmq:management-alpine
    container_name: Evently.Queue
    hostname: evently-queue
    volumes:
        - ./.containers/queue/data/:/var/lib/rabbitmq
        - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
  evently.seq:
    image: datalust/seq:latest
    container_name: Evently.Seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=123
    ports:
      - 5341:5341
      - 8082:80
    volumes: # <--- This line must be indented exactly under 'ports' and 'environment'
      - ./.containers/seq/data:/data